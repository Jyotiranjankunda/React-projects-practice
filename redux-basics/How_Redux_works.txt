Redux has only one central data(state) store for the entire application.

We use this data store from inside the components. The components setup subscription to the store, and whenever the data changes, the store notifies to the component, and they get the data.

Component never directly manipulate the data in the data store.
We have a reducer function. It is responsible for mutating the data in store. 
Components dispatch some action that is forwarded to the reducer which then tell to change which data in the store.

Reducer function takes the input as old state + dispatched action => which then give the output as a new state object. 
The reducer function should be a pure function, i.e, same input always leads to the same output. And this function should not contain any kind of side effects. 
